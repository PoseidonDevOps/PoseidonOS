name: CMake

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Install build tool
      run: sudo apt-get install -y build-essential python wget libssl-dev libaio-dev vim git

    - name: Download required packages
      working-directory: ${{github.workspace}}/script
      run: sudo bash -C "./pkgdep.sh"

    - name: Build dependent libraries
      working-directory: ${{github.workspace}}/lib
      run: sudo bash -C "./build_lib.sh"
      
    - name: Configure src
      working-directory: ${{github.workspace}}/
      run: sudo bash -C "./configure"

    - name: Build src
      working-directory: ${{github.workspace}}/
      run: sudo bash -C "make -j 4"

    - name: Configure test
      working-directory: ${{github.workspace}}/test
      run: sudo bash -C "cmake ."

    - name: Build test
      working-directory: ${{github.workspace}}/test
      run: sudo bash -C "make -j 4"
      
    - name: Run Unit Tests
      working-directory: ${{github.workspace}}/test
      run: sudo bash -C "make run_ut"
      
    - name: Run Integration Tests
      working-directory: ${{github.workspace}}/test
      run: sudo bash -C "make run_it"
      
